"use strict";(self.webpackChunkarrayan=self.webpackChunkarrayan||[]).push([[2026],{2026:(e,t,o)=>{o.d(t,{TwinkleUpdater:()=>a});var i=o(4709);class s{constructor(){this.enable=!1,this.frequency=.05,this.opacity=1}load(e){e&&(void 0!==e.color&&(this.color=i.Oz.create(this.color,e.color)),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.frequency&&(this.frequency=e.frequency),void 0!==e.opacity&&(this.opacity=(0,i.Cs)(e.opacity)))}}class n{constructor(){this.lines=new s,this.particles=new s}load(e){e&&(this.lines.load(e.lines),this.particles.load(e.particles))}}class a{getColorStyles(e,t,o,s){const n=e.options.twinkle;if(!n)return{};const a=n.particles,l=a.enable&&(0,i.sZ)()<a.frequency,r=e.options.zIndex,c=(1-e.zIndexFactor)**r.opacityRate,d=l?(0,i.Gu)(a.opacity)*c:s,p=(0,i.lN)(a.color),u=p?(0,i.vz)(p,d):void 0,y={},h=l&&u;return y.fill=h?u:void 0,y.stroke=h?u:void 0,y}async init(){await Promise.resolve()}isEnabled(e){const t=e.options.twinkle;return!!t&&t.particles.enable}loadOptions(e){e.twinkle||(e.twinkle=new n);for(var t=arguments.length,o=new Array(t>1?t-1:0),i=1;i<t;i++)o[i-1]=arguments[i];for(const s of o)e.twinkle.load(null===s||void 0===s?void 0:s.twinkle)}async update(){await Promise.resolve()}}}}]);
//# sourceMappingURL=2026.a4a80ca2.chunk.js.map